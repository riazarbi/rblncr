% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/balance_portfolio.R
\name{balance_portfolio}
\alias{balance_portfolio}
\title{Balance portfolio}
\usage{
balance_portfolio(
  portfolio_model,
  trading_connection,
  pricing_connection,
  min_order_size = 1000,
  max_order_size = 10000,
  daily_vol_pct_limit = 0.02,
  pricing_spread_tolerance = 0.02,
  pricing_overrides = NULL,
  trader_life = 30,
  resubmit_interval = 5,
  buy_only = FALSE,
  verbose = TRUE
)
}
\arguments{
\item{portfolio_model}{a portfolio model, as created by \code{create_portfolio_model()}}

\item{trading_connection}{a connection to a trading backend}

\item{pricing_connection}{a connection to a data backend}

\item{min_order_size}{minimum trader order size}

\item{max_order_size}{maximum trader order size}

\item{daily_vol_pct_limit}{\code{trader()} function will not trade more than this percentage of a symbol's trailing 10 day average daily volume}

\item{pricing_spread_tolerance}{limit order setting function will not set a price if the bid-ask spread for a symbol is greater than this spread}

\item{pricing_overrides}{options. Use this to set your own symbol price limits}

\item{trader_life}{duration in seconds that the \code{trader()} should keep trading before timing out}

\item{resubmit_interval}{duration in seconds that a \code{trader()} should keep an order in the market before cancelling it and resubmitting at an updated limit price}

\item{buy_only}{TRUE/FALSE flag to indicate whether the \code{trader()} should limit itself to only buy orders}

\item{verbose}{TRUE/FALSE flag to indicate if the function should emit messages}
}
\value{
a list containing a \code{portfolio_balanced} value (TRUE/FALSE), a data frame indicating the \code{drift} of each symbol, and a data frame detailing the \code{trades} attempted.
}
\description{
Wrapper function to automatically rebalance a portfolio. Requires a \code{portfolio_model} input (see \code{create_portfolio_model()} or \code{read_portfolio_model()}), a trading connection and a data connection as a minimum (see, for example, \code{alpaca_connect()} although others may be supported in the future).
}
\examples{
\dontrun{
t_conn <- alpaca_connect('paper',
                        Sys.getenv("ALPACA_PAPER_KEY"),
                        Sys.getenv("ALPACA_PAPER_SECRET"))
d_conn <- alpaca_connect('data',
                        Sys.getenv("ALPACA_LIVE_KEY"),
                        Sys.getenv("ALPACA_LIVE_SECRET"))
portfolio_model <- read_portfolio_model(system.file(package='rblncr','extdata/sample_portfolio.yaml'))

balance_portfolio(portfolio_model,
                             t_conn,
                             d_conn,
                             verbose = F)
                             }
}
